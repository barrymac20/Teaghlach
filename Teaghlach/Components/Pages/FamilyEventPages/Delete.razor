@page "/familyevents/delete"
@using Microsoft.EntityFrameworkCore
@using Teaghlach.Models
@inject IDbContextFactory<Teaghlach.Data.TeaghlachContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<p>Are you sure you want to delete this?</p>
<div>
    <h2>FamilyEvent</h2>
    <hr />
    @if (FamilyEvent is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Text</dt>
            <dd class="col-sm-10">@FamilyEvent.Text</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Location</dt>
            <dd class="col-sm-10">@FamilyEvent.Location</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Description</dt>
            <dd class="col-sm-10">@FamilyEvent.Description</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Category</dt>
            <dd class="col-sm-10">@FamilyEvent.EventCategory?.Name</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Sub-Category</dt>
            <dd class="col-sm-10">@FamilyEvent.EventSubCategory?.Name</dd>
        </dl>
       
        <dl class="row">
            <dt class="col-sm-2">FamilyMemberId</dt>
            <dd class="col-sm-10">@FamilyEvent.FamilyMember</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Start</dt>
            <dd class="col-sm-10">@FamilyEvent.Start</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">End</dt>
            <dd class="col-sm-10">@FamilyEvent.End</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">AllDay</dt>
            <dd class="col-sm-10">@FamilyEvent.AllDay</dd>
        </dl>
        
        <EditForm method="post" Model="FamilyEvent" OnValidSubmit="DeleteFamilyEvent" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(FamilyEvent is null)">Delete</button> |
            <a href="/calendar">Back to Calendar</a>
        </EditForm>
    }
</div>

@code {
    private FamilyEvent? FamilyEvent;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();

        FamilyEvent ??= await context.FamilyEvents
            .Include(e => e.EventCategory)
            .Include(e => e.EventSubCategory)
            .Include(e => e.FamilyMember)    
            .FirstOrDefaultAsync(m => m.Id == Id);

        if (FamilyEvent is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }


    private async Task DeleteFamilyEvent()
    {
        using var context = DbFactory.CreateDbContext();
        context.FamilyEvents.Remove(FamilyEvent!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/calendar");
    }
}
